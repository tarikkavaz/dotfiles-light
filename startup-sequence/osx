if [[ $(command -v brew) ]]; then
    brew_prefix=$(brew --prefix)

    if [[ -f ${brew_prefix}/etc/bash_completion ]]; then
        source ${brew_prefix}/etc/bash_completion
    fi
    
    # brew install coreutils, gnu-ls is installed?
    if [[ $(command -v gls) ]]; then
        alias ls="gls -h --color --group-directories-first"
        alias ll="ls -al"
        alias la="ls -A"
        alias l="ls -Cp"
        export DFL_LS_COLORABLE=1
    fi
else
    alias ls="ls -hG@"
    alias ll="ls -al"
    alias la="ls -A"
    alias l="ls -CF"
fi

export MACOSX_VERSION=$(sw_vers -productVersion)

# osx prompt shell
# -----------------------------------------------------------------------------
PS1_OSX_BASIC="${PROMPT_MEMORY}${PROMPT_BATTERY}
${PROMPT_USER_AND_HOSTNAME}
${PROMPT_GIT}${PROMPT_HG}
$ "

PS1_OSX_ADVANCED="${PROMPT_HORIZONTAL_LINE}
${PROMPT_MEMORY}${PROMPT_BATTERY}
${PROMPT_USER_AND_HOSTNAME}
${PROMPT_DATABASE_STATUS}${PROMPT_VIRTUALENV}${PROMPT_RUBY_RBENV}${PROMPT_PYTHON_PYENV}${PROMPT_GIT}${PROMPT_HG}
$ "
# -----------------------------------------------------------------------------


# osx specific aliases
# -----------------------------------------------------------------------------
alias desktop_hide="defaults write com.apple.finder CreateDesktop -bool false;killall Finder;"
alias desktop_show="defaults write com.apple.finder CreateDesktop -bool true;killall Finder;"
alias shadow_screenshot_disable='defaults write com.apple.screencapture disable-shadow -bool true && killall SystemUIServer'
alias shadow_screenshot_enable='defaults write com.apple.screencapture disable-shadow -bool false && killall SystemUIServer'
alias ds_store_clear="find . -name '\.DS_Store' -print -delete"
alias lock_screen="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
# -----------------------------------------------------------------------------


# osx mojave
# -----------------------------------------------------------------------------
app_lightmode() {
    if [[ ${#} -ge 1 ]]; then
        app_bundle=$(osascript -e "id of app \"${1}\"")
        switch="on"
        if [[ "${2}" == "on" || "${2}" == "off" ]]; then
            switch="${2}"
        fi
        echo "turning switch ${switch} to ${1}"
        if [[ "${switch}" == "on" ]]; then
            defaults write ${app_bundle} NSRequiresAquaSystemAppearance -bool yes
        else
            defaults delete ${app_bundle} NSRequiresAquaSystemAppearance
        fi
        echo "Please restart ${1} to see change..."
    else
        echo "usage:"
        echo "app_lightmode name_of_the_app [on/off]"
        echo "default is: on"
    fi
}
# -----------------------------------------------------------------------------